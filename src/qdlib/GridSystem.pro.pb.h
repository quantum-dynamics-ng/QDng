// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GridSystem.pro

#ifndef PROTOBUF_GridSystem_2epro__INCLUDED
#define PROTOBUF_GridSystem_2epro__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace QDLIB {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GridSystem_2epro();
void protobuf_AssignDesc_GridSystem_2epro();
void protobuf_ShutdownFile_GridSystem_2epro();

class GridSystemHeader;
class GridSystemHeader_dim_description_t;

// ===================================================================

class GridSystemHeader_dim_description_t : public ::google::protobuf::Message {
 public:
  GridSystemHeader_dim_description_t();
  virtual ~GridSystemHeader_dim_description_t();
  
  GridSystemHeader_dim_description_t(const GridSystemHeader_dim_description_t& from);
  
  inline GridSystemHeader_dim_description_t& operator=(const GridSystemHeader_dim_description_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GridSystemHeader_dim_description_t& default_instance();
  
  void Swap(GridSystemHeader_dim_description_t* other);
  
  // implements Message ----------------------------------------------
  
  GridSystemHeader_dim_description_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GridSystemHeader_dim_description_t& from);
  void MergeFrom(const GridSystemHeader_dim_description_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 size = 1 [default = 0];
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 1;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);
  
  // required double xmin = 2 [default = 0];
  inline bool has_xmin() const;
  inline void clear_xmin();
  static const int kXminFieldNumber = 2;
  inline double xmin() const;
  inline void set_xmin(double value);
  
  // required double xmax = 3 [default = 0];
  inline bool has_xmax() const;
  inline void clear_xmax();
  static const int kXmaxFieldNumber = 3;
  inline double xmax() const;
  inline void set_xmax(double value);
  
  // @@protoc_insertion_point(class_scope:QDLIB.GridSystemHeader.dim_description_t)
 private:
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_xmin();
  inline void clear_has_xmin();
  inline void set_has_xmax();
  inline void clear_has_xmax();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double xmin_;
  double xmax_;
  ::google::protobuf::uint32 size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_GridSystem_2epro();
  friend void protobuf_AssignDesc_GridSystem_2epro();
  friend void protobuf_ShutdownFile_GridSystem_2epro();
  
  void InitAsDefaultInstance();
  static GridSystemHeader_dim_description_t* default_instance_;
};
// -------------------------------------------------------------------

class GridSystemHeader : public ::google::protobuf::Message {
 public:
  GridSystemHeader();
  virtual ~GridSystemHeader();
  
  GridSystemHeader(const GridSystemHeader& from);
  
  inline GridSystemHeader& operator=(const GridSystemHeader& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GridSystemHeader& default_instance();
  
  void Swap(GridSystemHeader* other);
  
  // implements Message ----------------------------------------------
  
  GridSystemHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GridSystemHeader& from);
  void MergeFrom(const GridSystemHeader& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef GridSystemHeader_dim_description_t dim_description_t;
  
  // accessors -------------------------------------------------------
  
  // required uint32 dims = 1 [default = 0];
  inline bool has_dims() const;
  inline void clear_dims();
  static const int kDimsFieldNumber = 1;
  inline ::google::protobuf::uint32 dims() const;
  inline void set_dims(::google::protobuf::uint32 value);
  
  // repeated .QDLIB.GridSystemHeader.dim_description_t dim = 2;
  inline int dim_size() const;
  inline void clear_dim();
  static const int kDimFieldNumber = 2;
  inline const ::QDLIB::GridSystemHeader_dim_description_t& dim(int index) const;
  inline ::QDLIB::GridSystemHeader_dim_description_t* mutable_dim(int index);
  inline ::QDLIB::GridSystemHeader_dim_description_t* add_dim();
  inline const ::google::protobuf::RepeatedPtrField< ::QDLIB::GridSystemHeader_dim_description_t >&
      dim() const;
  inline ::google::protobuf::RepeatedPtrField< ::QDLIB::GridSystemHeader_dim_description_t >*
      mutable_dim();
  
  // optional uint64 data_size = 3 [default = 0];
  inline bool has_data_size() const;
  inline void clear_data_size();
  static const int kDataSizeFieldNumber = 3;
  inline ::google::protobuf::uint64 data_size() const;
  inline void set_data_size(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:QDLIB.GridSystemHeader)
 private:
  inline void set_has_dims();
  inline void clear_has_dims();
  inline void set_has_data_size();
  inline void clear_has_data_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::QDLIB::GridSystemHeader_dim_description_t > dim_;
  ::google::protobuf::uint64 data_size_;
  ::google::protobuf::uint32 dims_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_GridSystem_2epro();
  friend void protobuf_AssignDesc_GridSystem_2epro();
  friend void protobuf_ShutdownFile_GridSystem_2epro();
  
  void InitAsDefaultInstance();
  static GridSystemHeader* default_instance_;
};
// ===================================================================


// ===================================================================

// GridSystemHeader_dim_description_t

// required uint32 size = 1 [default = 0];
inline bool GridSystemHeader_dim_description_t::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GridSystemHeader_dim_description_t::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GridSystemHeader_dim_description_t::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GridSystemHeader_dim_description_t::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 GridSystemHeader_dim_description_t::size() const {
  return size_;
}
inline void GridSystemHeader_dim_description_t::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
}

// required double xmin = 2 [default = 0];
inline bool GridSystemHeader_dim_description_t::has_xmin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GridSystemHeader_dim_description_t::set_has_xmin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GridSystemHeader_dim_description_t::clear_has_xmin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GridSystemHeader_dim_description_t::clear_xmin() {
  xmin_ = 0;
  clear_has_xmin();
}
inline double GridSystemHeader_dim_description_t::xmin() const {
  return xmin_;
}
inline void GridSystemHeader_dim_description_t::set_xmin(double value) {
  set_has_xmin();
  xmin_ = value;
}

// required double xmax = 3 [default = 0];
inline bool GridSystemHeader_dim_description_t::has_xmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GridSystemHeader_dim_description_t::set_has_xmax() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GridSystemHeader_dim_description_t::clear_has_xmax() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GridSystemHeader_dim_description_t::clear_xmax() {
  xmax_ = 0;
  clear_has_xmax();
}
inline double GridSystemHeader_dim_description_t::xmax() const {
  return xmax_;
}
inline void GridSystemHeader_dim_description_t::set_xmax(double value) {
  set_has_xmax();
  xmax_ = value;
}

// -------------------------------------------------------------------

// GridSystemHeader

// required uint32 dims = 1 [default = 0];
inline bool GridSystemHeader::has_dims() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GridSystemHeader::set_has_dims() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GridSystemHeader::clear_has_dims() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GridSystemHeader::clear_dims() {
  dims_ = 0u;
  clear_has_dims();
}
inline ::google::protobuf::uint32 GridSystemHeader::dims() const {
  return dims_;
}
inline void GridSystemHeader::set_dims(::google::protobuf::uint32 value) {
  set_has_dims();
  dims_ = value;
}

// repeated .QDLIB.GridSystemHeader.dim_description_t dim = 2;
inline int GridSystemHeader::dim_size() const {
  return dim_.size();
}
inline void GridSystemHeader::clear_dim() {
  dim_.Clear();
}
inline const ::QDLIB::GridSystemHeader_dim_description_t& GridSystemHeader::dim(int index) const {
  return dim_.Get(index);
}
inline ::QDLIB::GridSystemHeader_dim_description_t* GridSystemHeader::mutable_dim(int index) {
  return dim_.Mutable(index);
}
inline ::QDLIB::GridSystemHeader_dim_description_t* GridSystemHeader::add_dim() {
  return dim_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QDLIB::GridSystemHeader_dim_description_t >&
GridSystemHeader::dim() const {
  return dim_;
}
inline ::google::protobuf::RepeatedPtrField< ::QDLIB::GridSystemHeader_dim_description_t >*
GridSystemHeader::mutable_dim() {
  return &dim_;
}

// optional uint64 data_size = 3 [default = 0];
inline bool GridSystemHeader::has_data_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GridSystemHeader::set_has_data_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GridSystemHeader::clear_has_data_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GridSystemHeader::clear_data_size() {
  data_size_ = GOOGLE_ULONGLONG(0);
  clear_has_data_size();
}
inline ::google::protobuf::uint64 GridSystemHeader::data_size() const {
  return data_size_;
}
inline void GridSystemHeader::set_data_size(::google::protobuf::uint64 value) {
  set_has_data_size();
  data_size_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QDLIB

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GridSystem_2epro__INCLUDED
